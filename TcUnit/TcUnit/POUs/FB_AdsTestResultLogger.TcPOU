<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_AdsTestResultLogger" Id="{d14d6247-3ce3-459f-be22-6ee3520279ed}" SpecialFunc="None">
    <Declaration><![CDATA[(*
    This function block reports the results from the tests using the built-in ADSLOGSTR functionality
    provided by the Tc2_System library. This sends the result using ADS, which is consumed by the "Error List"
    of Visual Studio (which can print Errors, Warnings and Messages).
*)
FUNCTION_BLOCK FB_AdsTestResultLogger IMPLEMENTS I_TestResultLogger
VAR
    PrintingTestSuiteResultNumber : UINT(1..GVL_Param_TcUnit.MaxNumberOfTestSuites);
    PrintingTestSuiteTrigger : Tc2_Standard.R_TRIG;
    
    (* This flag is set once the final end result has printed *)
    PrintedFinalTestResults : BOOL;
    
    (* This flag is set once the test suites result have been printed *)
    PrintedTestSuitesResults : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="LogTestSuiteResults" Id="{3263938a-5e4f-4e5f-bfa0-9c9469439d97}">
      <Declaration><![CDATA[METHOD PUBLIC LogTestSuiteResults
VAR_INPUT
    TestResults : REFERENCE TO ARRAY[1..GVL_Param_TcUnit.MaxNumberOfTestSuites] OF ST_TestSuiteResult;
END_VAR
VAR
    StringToPrint : Tc2_System.T_MaxString; 
    TestsInTestSuiteCounter : UINT(1..GVL_Param_TcUnit.MaxNumberOfTestsForEachTestSuite);
    
    NumberOfTestSuites : UINT;
    NumberOfTestCases : UINT;
    NumberOfSuccessfulTestCases : UINT;
    NumberOfFailedTestCases : UINT;
    GeneralTestResultsTestSuitesCounter : UINT(1..GVL_Param_TcUnit.MaxNumberOfTestSuites);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF PrintingTestSuiteResultNumber <= GVL_TcUnit.NumberOfInitializedTestSuites AND NOT PrintedTestSuitesResults THEN

    PrintingTestSuiteTrigger(CLK := GVL_TcUnit.TestSuiteAddresses[PrintingTestSuiteResultNumber]^.AreAllTestsFinished());
    IF PrintingTestSuiteTrigger.Q THEN
        StringToPrint := Tc2_Standard.CONCAT(STR1 := '| Test suite $'%s$' with ID=',
                                             STR2 := UINT_TO_STRING(TestResults[PrintingTestSuiteResultNumber].Identity));
        StringToPrint := Tc2_Standard.CONCAT(STR1 := StringToPrint,
                                             STR2 := ' finished running');

        (* Print test suite name and ID *)
        GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_HINT,
                                            MsgFmtStr := StringToPrint,
                                            StrArg := TestResults[PrintingTestSuiteResultNumber].Name);

        (* Print number of tests in test suite *)
        StringToPrint := Tc2_Standard.CONCAT(STR1 := '| ID=',
                                             STR2 := UINT_TO_STRING(TestResults[PrintingTestSuiteResultNumber].Identity));
        StringToPrint := Tc2_Standard.CONCAT(STR1 := StringToPrint,
                                             STR2 := ' number of tests=');
        StringToPrint := Tc2_Standard.CONCAT(STR1 := StringToPrint,
                                             STR2 := UINT_TO_STRING(TestResults[PrintingTestSuiteResultNumber].NumberOfTests));
        GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_HINT,
                                            MsgFmtStr := StringToPrint,
                                            StrArg := '');

        (* Print number of failed tests in test suite *)
        StringToPrint := Tc2_Standard.CONCAT(STR1 := '| ID=',
                                             STR2 := UINT_TO_STRING(TestResults[PrintingTestSuiteResultNumber].Identity));
        StringToPrint := Tc2_Standard.CONCAT(STR1 := StringToPrint,
                                             STR2 := ' number of failed tests=');
        StringToPrint := Tc2_Standard.CONCAT(STR1 := StringToPrint,
                                             STR2 := UINT_TO_STRING(TestResults[PrintingTestSuiteResultNumber].NumberOfFailedTests));
        GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_HINT,
                                            MsgFmtStr := StringToPrint,
                                            StrArg := '');

        (* Iterate and print all tests in test suite *)
        FOR TestsInTestSuiteCounter := 1 TO TestResults[PrintingTestSuiteResultNumber].NumberOfTests BY 1 DO
            (* Print test name *)
            GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_HINT,
                                                MsgFmtStr := '| Test name=%s',
                                                StrArg := TestResults[PrintingTestSuiteResultNumber].TestCaseResults[TestsInTestSuiteCounter].TestName);
            (* Print test class name *)
            GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_HINT,
                                                MsgFmtStr := '| Test class name=%s',
                                                StrArg := TestResults[PrintingTestSuiteResultNumber].TestCaseResults[TestsInTestSuiteCounter].TestClassName);
            
		END_FOR
        
        IF PrintingTestSuiteResultNumber = GVL_TcUnit.NumberOfInitializedTestSuites THEN
            PrintedTestSuitesResults := TRUE;
        ELSE
            PrintingTestSuiteResultNumber := PrintingTestSuiteResultNumber + 1;
        END_IF
        PrintingTestSuiteTrigger(CLK := FALSE); // Reset trigger
    END_IF
END_IF

(* Log end results once all test suites have finished running *)
IF PrintingTestSuiteResultNumber = GVL_TcUnit.NumberOfInitializedTestSuites AND NOT PrintedFinalTestResults THEN
    NumberOfTestSuites := GVL_TcUnit.NumberOfInitializedTestSuites;
    FOR GeneralTestResultsTestSuitesCounter := 1 TO GVL_TcUnit.NumberOfInitializedTestSuites BY 1 DO
        NumberOfTestCases := NumberOfTestCases + TestResults[GeneralTestResultsTestSuitesCounter].NumberOfTests;
        NumberOfSuccessfulTestCases := NumberOfSuccessfulTestCases + (TestResults[GeneralTestResultsTestSuitesCounter].NumberOfTests - TestResults[GeneralTestResultsTestSuitesCounter].NumberOfFailedTests);
        NumberOfFailedTestCases := NumberOfFailedTestCases + TestResults[GeneralTestResultsTestSuitesCounter].NumberOfFailedTests;
	END_FOR
    
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '%s',
                                        StrArg := '| ==========TESTS FINISHED RUNNING==========');
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '| Test suites: %s',
                                        StrArg := UINT_TO_STRING(NumberOfTestSuites));
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '| Tests: %s',
                                        StrArg := UINT_TO_STRING(NumberOfTestCases));
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '| Successful tests: %s',
                                        StrArg := UINT_TO_STRING(NumberOfSuccessfulTestCases));
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '| Failed tests: %s',
                                        StrArg := UINT_TO_STRING(NumberOfFailedTestCases));
    GVL_TcUnit.AdsMessageQueue.WriteLog(MsgCtrlMask := Tc2_System.ADSLOG_MSGTYPE_ERROR,
                                        MsgFmtStr := '%s',
                                        StrArg := '| ======================================');
    PrintedFinalTestResults := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_AdsTestResultLogger">
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_AdsTestResultLogger.LogTestSuiteResults">
      <LineId Id="25" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="56" Count="2" />
      <LineId Id="61" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="85" Count="1" />
      <LineId Id="68" Count="1" />
      <LineId Id="77" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="87" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="82" Count="1" />
      <LineId Id="81" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="97" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="117" Count="2" />
      <LineId Id="112" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="195" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="198" Count="1" />
      <LineId Id="197" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="189" Count="4" />
      <LineId Id="188" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="131" Count="16" />
      <LineId Id="127" Count="0" />
      <LineId Id="125" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>