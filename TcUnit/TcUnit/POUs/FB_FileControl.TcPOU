<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_FileControl" Id="{92b054f5-6c17-4a97-bba0-430785a7dda3}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide_all_locals'}
FUNCTION_BLOCK FB_FileControl
VAR
    FileAccessMode : SysFile.ACCESS_MODE := SysFile.AM_WRITE_PLUS;
    FileHandle : SysFile.SysTypes.RTS_IEC_HANDLE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Close" Id="{9e59e2f2-4c01-4eef-a03e-ca6cece47c41}">
      <Declaration><![CDATA[// Closes the current file
METHOD PUBLIC Close : SysFile.SysTypes.RTS_IEC_RESULT;]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    Close := SysFile.SysFileClose(hFile := FileHandle);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Open" Id="{edeba3e3-eab7-4baf-8c37-097da76a12ae}">
      <Declaration><![CDATA[// Opens a file
METHOD PUBLIC Open : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    FileName : Tc2_System.T_MaxString := 'filepath/output.xml'; // File name can contain an absolute or relative path to the file. Path entries must be separated with a Slash (/)
    FileAccessMode : SysFile.ACCESS_MODE := SysFile.ACCESS_MODE.AM_APPEND_PLUS;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FileHandle := SysFile.SysFileOpen(szFile := Filename,
                                  am := FileAccessMode,
                                  pResult := ADR(Open));]]></ST>
      </Implementation>
    </Method>
    <Method Name="Read" Id="{f93ea44f-4d8d-464c-9dd2-7b8491d1d0cf}">
      <Declaration><![CDATA[METHOD Read : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    pString : POINTER TO BYTE; // Call with ADR();
    Size : UDINT; // Call with SIZEOF(); 
END_VAR
VAR_OUTPUT
    FileSize : SysFile.SysTypes.RTS_IEC_SIZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    FileSize := SysFile.SysFileread(hFile := FileHandle, 
                                    pbyBuffer := pString,
                                    ulSize := Size,
                                    pResult := ADR(Read));
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Save" Id="{2f313ee5-51e4-4400-81ec-246d44b99c29}">
      <Declaration><![CDATA[// Saves the contents of the buffer into a file
// Be sure to call Open() before calling Save()
METHOD Save : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    pString : POINTER TO BYTE; // Call with ADR();
    Size : UDINT; // Call with SIZEOF();
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    SysFile.SysFileWrite(hFile := FileHandle,
                         pbyBuffer := pString,
                         ulSize := Size,
                         pResult := ADR(Save));
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>