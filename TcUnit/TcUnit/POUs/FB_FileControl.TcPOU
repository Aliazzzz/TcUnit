<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_FileControl" Id="{92b054f5-6c17-4a97-bba0-430785a7dda3}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide_all_locals'}
FUNCTION_BLOCK FB_FileControl IMPLEMENTS I_FileControl
VAR
	stFileAccessMode : SysFile.ACCESS_MODE := SysFile.AM_WRITE_PLUS;
	hFile : SysFile.SysTypes.RTS_IEC_HANDLE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="fileClose" Id="{9e59e2f2-4c01-4eef-a03e-ca6cece47c41}">
      <Declaration><![CDATA[// Close the current file
METHOD fileClose : SysFile.SysTypes.RTS_IEC_RESULT;
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF hFile <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
	fileClose := SysFile.SysFileClose(hFile := hFile);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="fileOpen" Id="{edeba3e3-eab7-4baf-8c37-097da76a12ae}">
      <Declaration><![CDATA[// Opens a file
METHOD fileOpen : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
	// File name. File name can contain an absolute or relative path to the file. Path entries must be separated with a Slash (/)
	szFilename : STRING := 'filepath/output.xml'; 
	stFileAccessMode : SysFile.ACCESS_MODE := SysFile.ACCESS_MODE.AM_APPEND_PLUS;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[hFile := SysFile.SysFileOpen( szFile := szFilename,
							  am := stFileAccessMode,
							  pResult := ADR(fileOpen));]]></ST>
      </Implementation>
    </Method>
    <Method Name="fileRead" Id="{f93ea44f-4d8d-464c-9dd2-7b8491d1d0cf}">
      <Declaration><![CDATA[METHOD fileRead  : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
	// Call with ADR( );
	pString : POINTER TO BYTE;
	// Call with SIZEOF( ); 
	udiSizeOf : UDINT;
END_VAR
VAR_OUTPUT
	// Filesize
	Size : SysFile.SysTypes.RTS_IEC_SIZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF hFile <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
	Size := SysFile.SysFileread(hFile := hFile, 
							pbyBuffer := pString,
							ulSize := udiSizeOf, 
							pResult := ADR(fileRead));					
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="fileSave" Id="{2f313ee5-51e4-4400-81ec-246d44b99c29}">
      <Declaration><![CDATA[// saves the contents of the buffer into a file
// be sure to call fileOpen() before calling fileSave()
METHOD fileSave : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
	// call with ADR( );
	pString : POINTER TO BYTE;
	// Call with SIZEOF( ); 
	udiSizeOf : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF hFile <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
	SysFile.SysFileWrite(hFile := hFile, 
						pbyBuffer := pString,
						ulSize := udiSizeOf, 
						pResult := ADR(fileSave));					
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_FileControl">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileControl.fileClose">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileControl.fileOpen">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileControl.fileRead">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_FileControl.fileSave">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>